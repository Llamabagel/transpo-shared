plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
    id "com.jfrog.bintray" version "1.8.4"
    id 'maven-publish'
    id 'maven'
}

group 'ca.llamabagel.transpo'
version 'git describe --tag --dirty'.execute().text.trim()

repositories {
    mavenCentral()
    google()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "androidx.room:room-runtime:2.1.0-alpha01"
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation "org.postgresql:postgresql:42.2.2"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.20"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.slf4j:slf4j-simple:1.7.25'
    testImplementation 'com.opentable.components:otj-pg-embedded:0.13.1'
    testImplementation "org.flywaydb:flyway-core:5.2.4"
}

test {
    useJUnit()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'ca.llamabagel.transpo'
            artifactId 'shared'
            version 'git describe --tag --dirty'.execute().text.trim()

            from components.java

            artifact sourceJar
            artifact javadocJar
        }
    }
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

bintray {
    Properties properties = new Properties()
    File propertiesFile = project.rootProject.file('local.properties')
    if (propertiesFile.exists()) {
        properties.load(propertiesFile.newDataInputStream())
    }

    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    //noinspection GroovyAccessibility
    publications = ['maven']

    pkg {
        repo = 'transpo'
        name = 'transpo-shared'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/dellisd/transpo-shared.git'
    }
}